{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///E:/magang/afterSchola/projek/lms-afterschola/src/components/sidebar/SidebarLayout.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AppShell,\r\n  Burger,\r\n  Text,\r\n  Group,\r\n  Menu,\r\n  Avatar,\r\n  UnstyledButton,\r\n  ScrollArea,\r\n  Stack,\r\n  Badge,\r\n  Switch,\r\n  useMantineColorScheme,\r\n} from \"@mantine/core\";\r\nimport Image from \"next/image\";\r\nimport { User, NavigationItem } from \"../../types\";\r\nimport {\r\n  IconLogout,\r\n  IconUser,\r\n  IconMoon,\r\n  IconSun,\r\n  IconDashboard,\r\n  IconBook,\r\n  IconUsers,\r\n  IconMessageCircle,\r\n  IconChartBar,\r\n  IconCoin,\r\n  IconCertificate,\r\n  IconBookmark,\r\n  IconPlaylist,\r\n  IconQuestionMark,\r\n  IconAward,\r\n  IconWallet,\r\n  IconShoppingCart,\r\n} from \"@tabler/icons-react\";\r\nimport Link from \"next/link\";\r\nimport { usePathname } from \"next/navigation\";\r\n//\r\n\r\ninterface DashboardLayoutProps {\r\n  children: React.ReactNode;\r\n  user: User;\r\n  onLogout: () => void;\r\n}\r\n\r\nconst getNavigationItems = (role: User[\"role\"]): NavigationItem[] => {\r\n  const baseItems: NavigationItem[] = [\r\n    {\r\n      label: \"Dashboard\",\r\n      href: `/${role}/dashboard`,\r\n      icon: \"IconDashboard\",\r\n    },\r\n  ];\r\n\r\n  switch (role) {\r\n    case \"admin\":\r\n      return [\r\n        ...baseItems,\r\n        {\r\n          label: \"Manajemen User\",\r\n          href: \"/admin/users\",\r\n          icon: \"IconUsers\",\r\n        },\r\n        {\r\n          label: \"Manajemen Keuangan\",\r\n          href: \"/admin/earnings\",\r\n          icon: \"IconCoin\",\r\n        },\r\n      ];\r\n\r\n    case \"instructor\":\r\n      return [\r\n        ...baseItems,\r\n        {\r\n          label: \"Kursus Saya\",\r\n          href: \"/instructor/courses\",\r\n          icon: \"IconBook\",\r\n        },\r\n        {\r\n          label: \"Forum Diskusi\",\r\n          href: \"/instructor/discussions\",\r\n          icon: \"IconMessageCircle\",\r\n        },\r\n        {\r\n          label: \"Penghasilan\",\r\n          href: \"/instructor/earnings\",\r\n          icon: \"IconCoin\",\r\n        },\r\n      ];\r\n\r\n    case \"user\":\r\n      return [\r\n        ...baseItems,\r\n        {\r\n          label: \"Kursus Saya\",\r\n          href: \"/user/courses\",\r\n          icon: \"IconBook\",\r\n        },\r\n        {\r\n          label: \"Jelajahi Kursus\",\r\n          href: \"/user/explore\",\r\n          icon: \"IconBookmark\",\r\n        },\r\n        {\r\n          label: \"Learning Path\",\r\n          href: \"/user/learning-paths\",\r\n          icon: \"IconPlaylist\",\r\n        },\r\n        {\r\n          label: \"Diskusi & Forum\",\r\n          href: \"/user/discussions\",\r\n          icon: \"IconMessageCircle\",\r\n        },\r\n      ];\r\n\r\n    default:\r\n      return baseItems;\r\n  }\r\n};\r\n\r\nconst iconMap: Record<string, React.FC<{ size?: string | number }>> = {\r\n  IconDashboard,\r\n  IconBook,\r\n  IconUsers,\r\n  IconMessageCircle,\r\n  IconChartBar,\r\n  IconCoin,\r\n  IconCertificate,\r\n  IconBookmark,\r\n  IconPlaylist,\r\n  IconQuestionMark,\r\n  IconAward,\r\n  IconWallet,\r\n  IconShoppingCart,\r\n};\r\n\r\nexport function DashboardLayout({\r\n  children,\r\n  user,\r\n  onLogout,\r\n}: DashboardLayoutProps) {\r\n  const pathname = usePathname();\r\n  const { colorScheme, toggleColorScheme } = useMantineColorScheme();\r\n  const [navOpened, setNavOpened] = useState(false);\r\n\r\n  // Navbar akan disembunyikan jika di halaman profile user\r\n  const hideNavbar = pathname === \"/user/profile\";\r\n\r\n  const navigationItems = getNavigationItems(user.role);\r\n\r\n  const getRoleColor = (role: User[\"role\"]) => {\r\n    switch (role) {\r\n      case \"admin\":\r\n        return \"red\";\r\n      case \"instructor\":\r\n        return \"blue\";\r\n      case \"user\":\r\n        return \"green\";\r\n      default:\r\n        return \"gray\";\r\n    }\r\n  };\r\n\r\n  const getRoleLabel = (role: User[\"role\"]) => {\r\n    switch (role) {\r\n      case \"admin\":\r\n        return \"Admin\";\r\n      case \"instructor\":\r\n        return \"Instruktur\";\r\n      case \"user\":\r\n        return \"Siswa\";\r\n      default:\r\n        return \"User\";\r\n    }\r\n  };\r\n\r\n  // Close navbar on route change (especially on mobile) to avoid overlaying content\r\n  useEffect(() => {\r\n    setNavOpened(false);\r\n  }, [pathname]);\r\n\r\n  return (\r\n    <AppShell\r\n      navbar={\r\n        !hideNavbar\r\n          ? {\r\n              width: 280,\r\n              breakpoint: \"sm\",\r\n              collapsed: { mobile: !navOpened },\r\n            }\r\n          : undefined\r\n      }\r\n      header={{ height: 70 }}\r\n      padding=\"md\"\r\n    >\r\n      <AppShell.Header withBorder>\r\n        <Group h=\"100%\" px=\"md\" justify=\"space-between\">\r\n          <Group>\r\n            {/* Mobile burger */}\r\n            <Burger\r\n              opened={navOpened}\r\n              onClick={() => setNavOpened((o) => !o)}\r\n              hiddenFrom=\"sm\"\r\n              size=\"sm\"\r\n            />\r\n            {/* Brand logo */}\r\n            <Link\r\n              href={`/${user.role}/dashboard`}\r\n              style={{ display: \"flex\", alignItems: \"center\" }}\r\n            >\r\n              <Image\r\n                src=\"/logo-text.png\"\r\n                alt=\"Afterschola\"\r\n                width={140}\r\n                height={28}\r\n                priority\r\n                style={{ height: 48, width: \"auto\" }}\r\n                className=\"hidden md:block\"\r\n              />\r\n            </Link>\r\n            <Badge color={getRoleColor(user.role)} variant=\"light\">\r\n              {getRoleLabel(user.role)}\r\n            </Badge>\r\n          </Group>\r\n\r\n          <Group>\r\n            <Switch\r\n              size=\"md\"\r\n              color=\"dark.4\"\r\n              onLabel={<IconSun size=\"1rem\" stroke={2.5} />}\r\n              offLabel={<IconMoon size=\"1rem\" stroke={2.5} />}\r\n              checked={colorScheme === \"light\"}\r\n              onChange={() => toggleColorScheme()}\r\n            />\r\n\r\n            <Menu shadow=\"md\" width={200}>\r\n              <Menu.Target>\r\n                <UnstyledButton>\r\n                  <Group>\r\n                    <Avatar\r\n                      src={user.avatar}\r\n                      alt={user.fullName}\r\n                      radius=\"xl\"\r\n                      size=\"md\"\r\n                    >\r\n                      {user.fullName\r\n                        .split(\" \")\r\n                        .map((n) => n[0])\r\n                        .join(\"\")\r\n                        .toUpperCase()}\r\n                    </Avatar>\r\n                  </Group>\r\n                </UnstyledButton>\r\n              </Menu.Target>\r\n\r\n              <Menu.Dropdown>\r\n                <Menu.Label>\r\n                  {user.fullName}\r\n                  <Text size=\"xs\" c=\"dimmed\">\r\n                    @{user.username}\r\n                  </Text>\r\n                </Menu.Label>\r\n                <Menu.Divider />\r\n                <Menu.Item\r\n                  component={Link}\r\n                  href={`/${user.role}/profile`}\r\n                  leftSection={<IconUser size=\"1rem\" />}\r\n                >\r\n                  Profil Saya\r\n                </Menu.Item>\r\n\r\n                <Menu.Divider />\r\n                <Menu.Item\r\n                  leftSection={<IconLogout size=\"1rem\" />}\r\n                  color=\"red\"\r\n                  onClick={onLogout}\r\n                >\r\n                  Keluar\r\n                </Menu.Item>\r\n              </Menu.Dropdown>\r\n            </Menu>\r\n          </Group>\r\n        </Group>\r\n      </AppShell.Header>\r\n      \r\n      {!hideNavbar && (\r\n      <AppShell.Navbar p=\"md\" withBorder>\r\n        <ScrollArea>\r\n          <Stack gap=\"sm\">\r\n            {navigationItems.map((item) => {\r\n              const Icon = iconMap[item.icon];\r\n              const isActive = pathname === item.href;\r\n\r\n              return (\r\n                <Link\r\n                  key={item.href}\r\n                  href={item.href}\r\n                  className={`nav-link ${isActive ? \"active\" : \"\"}`}\r\n                  style={{ textDecoration: \"none\" }}\r\n                  onClick={() => setNavOpened(false)}\r\n                >\r\n                  <Group>\r\n                    <Icon size=\"1.2rem\" />\r\n                    <Text size=\"sm\">{item.label}</Text>\r\n                  </Group>\r\n                </Link>\r\n              );\r\n            })}\r\n          </Stack>\r\n        </ScrollArea>\r\n      </AppShell.Navbar>\r\n      )}\r\n\r\n      <AppShell.Main className=\"main-content\">{children}</AppShell.Main>\r\n    </AppShell>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 497, "column": 0}, "map": {"version":3,"sources":["file:///E:/magang/afterSchola/projek/lms-afterschola/src/app/user/layout.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { DashboardLayout } from \"../../components/sidebar/SidebarLayout\";\r\nimport { Container, Stack, Text, LoadingOverlay } from \"@mantine/core\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function UserLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const { user, logout, loading } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!loading && (!user || user.role !== \"user\")) {\r\n      router.push(\"/\");\r\n    }\r\n  }, [user, loading, router]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Container size=\"sm\" py={100}>\r\n        <LoadingOverlay visible />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  if (!user || user.role !== \"user\") {\r\n    return (\r\n      <Container size=\"sm\" py={100}>\r\n        <Stack align=\"center\" gap=\"md\">\r\n          <Text>Akses ditolak. Anda bukan siswa.</Text>\r\n        </Stack>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout user={user} onLogout={logout}>\r\n      {children}\r\n    </DashboardLayout>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AANA;;;;;;AAQe,SAAS,WAAW,KAIlC;QAJkC,EACjC,QAAQ,EAGT,GAJkC;;IAKjC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,IAAA,sIAAO;IACzC,MAAM,SAAS,IAAA,kJAAS;IAExB,IAAA,0KAAS;gCAAC;YACR,IAAI,CAAC,WAAW,CAAC,CAAC,QAAQ,KAAK,IAAI,KAAK,MAAM,GAAG;gBAC/C,OAAO,IAAI,CAAC;YACd;QACF;+BAAG;QAAC;QAAM;QAAS;KAAO;IAE1B,IAAI,SAAS;QACX,qBACE,6LAAC,iMAAS;YAAC,MAAK;YAAK,IAAI;sBACvB,cAAA,6LAAC,gNAAc;gBAAC,OAAO;;;;;;;;;;;IAG7B;IAEA,IAAI,CAAC,QAAQ,KAAK,IAAI,KAAK,QAAQ;QACjC,qBACE,6LAAC,iMAAS;YAAC,MAAK;YAAK,IAAI;sBACvB,cAAA,6LAAC,qLAAK;gBAAC,OAAM;gBAAS,KAAI;0BACxB,cAAA,6LAAC,kLAAI;8BAAC;;;;;;;;;;;;;;;;IAId;IAEA,qBACE,6LAAC,oKAAe;QAAC,MAAM;QAAM,UAAU;kBACpC;;;;;;AAGP;GArCwB;;QAKY,sIAAO;QAC1B,kJAAS;;;KANF","debugId":null}}]
}